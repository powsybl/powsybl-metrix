name: Release CI

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  java:
    name: Package Java
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Checkout sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Package with Maven
        run: ./mvnw --batch-mode package

      - name: Upload release package
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2.0.9
        with:
          files: ./metrix-distribution/target/itools-metrix.zip

  cpp_centos7:
    name: Package C++ CentOS7
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Build the Docker image
        run: |
          docker build -t centos7withcmake:latest $GITHUB_WORKSPACE --file $GITHUB_WORKSPACE/.github/workflows/docker/Dockerfile

      - name: Run build steps in Docker container
        run: |
          docker run --name build_container -v $GITHUB_WORKSPACE:/workspace centos7withcmake:latest /bin/bash -c "
            source /opt/rh/devtoolset-9/enable
            cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build/external
            cmake --build $GITHUB_WORKSPACE/metrix-simulator/build/external --parallel 2
            cmake -S $GITHUB_WORKSPACE/metrix-simulator -Wno-dev -DCMAKE_BUILD_TYPE=Release -DBoost_ROOT=$GITHUB_WORKSPACE/__w/Boost/Boost/boost_1_73_0/installBoost -DBoost_INCLUDE_DIR=$GITHUB_WORKSPACE/__w/Boost/Boost/boost_1_73_0/installBoost -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build/install -B $GITHUB_WORKSPACE/metrix-simulator/build
            cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --target install --parallel 2
            cd $GITHUB_WORKSPACE/metrix-simulator/build && ctest -j2 --output-on-failure
          "

      - name: Prepare Metrix package
        id: metrix-install
        run: |
          ARCHIVE_NAME="metrix-simulator-centos7"
          ARCHIVE_PATH="$PWD/${ARCHIVE_NAME}"
          cd metrix-simulator/build/install/
          zip -r $ARCHIVE_PATH bin etc
          echo "archive_name=$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
          echo "archive_path=$ARCHIVE_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload release package
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2.0.9
        with:
          files: ${{ steps.metrix-install.outputs.archive_path }}.zip

  cpp_oraclelinux8:
    name: Package C++ Oracle Linux 8
    runs-on: ubuntu-latest
    container: 'oraclelinux:8'
    steps:
      - name: Install Boost
        run: |
          yum update -y
          yum install cmake make gcc gcc-c++ which git zip
          dnf --enablerepo=ol8_codeready_builder install boost-static

      - name: Checkout sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Configure 3rd parties
        run: >
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build/external

      - name: Build 3rd parties
        run: >
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build/external --parallel 2

      - name: Configure CMake
        run: >
          cmake -Wno-dev -S $GITHUB_WORKSPACE/metrix-simulator -B $GITHUB_WORKSPACE/metrix-simulator/build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build/install

      - name: Build
        run: cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --target install --parallel 2

      - name: Tests
        run: cd $GITHUB_WORKSPACE/metrix-simulator/build && ctest -j2 --output-on-failure

      - name: Prepare Metrix package
        id: metrix-install
        run: |
          ARCHIVE_NAME="metrix-simulator-ol8"
          ARCHIVE_PATH="$PWD/${ARCHIVE_NAME}"
          cd metrix-simulator/build/install/
          zip -r $ARCHIVE_PATH bin etc
          echo "archive_name=$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
          echo "archive_path=$ARCHIVE_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload release package
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2.0.9
        with:
          files: ${{ steps.metrix-install.outputs.archive_path }}.zip

  cpp_ubuntu:
    name: Package C++ Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Install Boost
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libboost-all-dev

      - name: Checkout sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Configure 3rd parties
        run: >
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build/external

      - name: Build 3rd parties
        run: >
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build/external --parallel 2

      - name: Configure CMake
        run: >
          cmake -Wno-dev -S $GITHUB_WORKSPACE/metrix-simulator -B $GITHUB_WORKSPACE/metrix-simulator/build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build/install

      - name: Build
        run: cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --target install --parallel 2

      - name: Tests
        run: cd $GITHUB_WORKSPACE/metrix-simulator/build && ctest -j2 --output-on-failure

      - name: Prepare Metrix package
        id: metrix-install
        run: |
          ARCHIVE_NAME="metrix-simulator-ubuntu"
          ARCHIVE_PATH="$PWD/${ARCHIVE_NAME}"
          cd metrix-simulator/build/install/
          zip -r $ARCHIVE_PATH bin etc
          echo "archive_name=$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
          echo "archive_path=$ARCHIVE_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload release package
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2.0.9
        with:
          files: ${{ steps.metrix-install.outputs.archive_path }}.zip

  cpp_windows:
    name: Package C++ Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    env:
      BOOST_ROOT: C:\thirdparties\boost-1.72.0
      BOOST_URL: https://sourceforge.net/projects/boost/files/boost-binaries/1.72.0/boost_1_72_0-msvc-14.2-64.exe/download
    steps:
      - name: Install Boost
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          choco install wget --no-progress
          wget -nv -O boost-installer.exe %BOOST_URL%
          boost-installer.exe /dir=%BOOST_ROOT% /sp- /verysilent /suppressmsgboxes /norestart

      - name: Checkout sources
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 #v4.1.6

      - name: Configure 3rd parties
        run: >
          cmake -S %GITHUB_WORKSPACE%\metrix-simulator\external -B %GITHUB_WORKSPACE%\metrix-simulator\build\external

      - name: Build 3rd parties
        run: >
          cmake --build %GITHUB_WORKSPACE%\metrix-simulator\build\external --parallel 2 --config Release

      - name: Configure CMake
        run: >
          cmake -Wno-dev -S %GITHUB_WORKSPACE%\metrix-simulator -B %GITHUB_WORKSPACE%\metrix-simulator\build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\metrix-simulator\build\install

      - name: Build
        run: cmake --build %GITHUB_WORKSPACE%\metrix-simulator\build --target install --parallel 2 --config Release

      - name: Tests
        run: cd %GITHUB_WORKSPACE%\metrix-simulator\build && ctest -j2 --output-on-failure -C Release

      - name: Prepare Metrix package
        id: metrix-install
        shell: powershell
        run: |
          $env:ARCHIVE_NAME = "metrix-simulator-windows"
          $env:ARCHIVE_PATH = "$env:GITHUB_WORKSPACE\$env:ARCHIVE_NAME"
          $env:ARCHIVE_PATH = $env:ARCHIVE_PATH -replace '\\','/'
          cd $env:GITHUB_WORKSPACE/metrix-simulator/build/install
          Compress-Archive -Path bin,etc -Destination $env:ARCHIVE_PATH
          echo "archive_name=$env:ARCHIVE_NAME" >> "$env:GITHUB_OUTPUT"
          echo "archive_path=$env:ARCHIVE_PATH" >> "$env:GITHUB_OUTPUT"

      - name: Upload release package
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2.0.9
        with:
          files: ${{ steps.metrix-install.outputs.archive_path }}.zip
