name: CI-cpp-centos7

on: [push]

defaults:
  run:
    shell: bash

jobs:
  linux:
    name: Linux xprs=${{ matrix.xprs }}
    runs-on: ubuntu-latest
    container: 'centos:centos7'
    strategy:
      fail-fast: false
      matrix:
        xprs: [ON, OFF]
    steps:
      - name: Install Dependencies
        run: |
          yum update -y
          yum install -y epel-release
          yum install -y git redhat-lsb-core make wget centos-release-scl scl-utils
          yum install -y devtoolset-9
          yum install -y python3 python3-pip

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.22.x'

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Download Boost-release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'ARnDOSrte/Boost'
          file: 'boost_1_73_0.zip'
          target: 'boost_1_73_0.zip'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unzip Boost
        run: unzip boost_1_73_0.zip
      
      - name : Install Python Xpress
        run: |
          pip3 install xpress
          echo ${{runner.workspace}}
          cd /./usr/local/lib64/python3.6/site-packages/xpress
          cd 
          pwd
          ls
          cd //usr/local/lib64/python3.6/site-packages/xpress/lib
          ln -s libxprs.so* libxprs.so

      - name: Setup xpress env
        if: ${{ matrix.xprs == 'ON' }}
        run: |
          echo "XPRESSDIR=//usr/local/lib64/python3.6/site-packages/xpress" >> $GITHUB_ENV
          echo "XPRESS=//usr/local/lib64/python3.6/site-packages/xpress/license/community-xpauth.xpr" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=//usr/local/lib64/python3.6/site-packages/xpress/lib" >> $GITHUB_ENV

      - name: Configure 3rd parties
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build-centos7/external -DCMAKE_BUILD_TYPE=Release -DUSE_CENTOS7=ON -DUSE_XPRESS=${{ matrix.xprs }} -DXPRESS_ROOT="${{ env.XPRESSDIR }}"

      - name: Build 3rd parties
        working-directory: metrix-simulator
        run: cmake --build build-centos7/external --parallel 2

      - name: Configure CMake
        working-directory: metrix-simulator
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -S . \
                -B build-centos7 \
                -DCMAKE_BUILD_TYPE=Release \
                -DBoost_ROOT=$GITHUB_WORKSPACE/__w/Boost/Boost/boost_1_73_0/installBoost \
                -DCMAKE_INSTALL_PREFIX=build-centos7/install \
                -DINSTALL_CMAKE_DIR=. \
                -DUSE_ORTOOLS=ON \
                -DUSE_CENTOS7=ON \
                -DUSE_XPRESS=${{ matrix.xprs }} \
                -DXPRESS_ROOT="${{ env.XPRESSDIR }}"

      - name: Build
        working-directory: metrix-simulator
        run: cmake --build build-centos7 --target install --parallel 2

      - name: Tests
        working-directory: metrix-simulator/build-centos7
        run: ctest -j8 --output-on-failure

      - name: Prepare metrix install
        id: metrix-install
        working-directory: metrix-simulator/build-centos7
        run: |
          [ ${{ matrix.xprs }} == "ON" ] && ARCHIVE_NAME=metrix_xprs || ARCHIVE_NAME=metrix
          ARCHIVE_PATH="${{ github.workspace }}/metrix-simulator/build-centos7/install"
          echo "::set-output name=archive_name::$ARCHIVE_NAME"
          echo "::set-output name=archive_path::$ARCHIVE_PATH"

      - name: Upload metrix install artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.metrix-install.outputs.archive_name }}
          path: ${{ steps.metrix-install.outputs.archive_path }}
