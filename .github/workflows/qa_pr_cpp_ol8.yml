name: QA-PR-CPP-OL8

on:
  workflow_dispatch:
  pull_request:
    types: [opened, ready_for_review, reopened]
  release:
    types: [published]
  push:
    paths:
      - '.github/workflows/qa_pr_cpp_ol8.yml'

# Cancel previous workflows if they are the same workflow on same ref (branch/tags)
# with the same event (push/pull_request) even they are in progress.
# This setting will help reduce the number of duplicated workflows.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  clang-tidy:
    name: Clang-tidy Oracle Linux 8
    runs-on: ubuntu-latest
    container: 'oraclelinux:8'
    steps:
      - name: Install Boost
        run: |
          yum update -y
          yum install cmake make gcc gcc-c++ which git
          dnf --enablerepo=ol8_codeready_builder install boost-static

      - name: Install clang-tidy
        run: |
          yum install -y llvm-toolset

      - name: Checkout sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Configure 3rd parties
        run: >
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build-ol8/external

      - name: Build 3rd parties
        run: >
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build-ol8/external --parallel 2

      - name: Configure CMake
        run: >
          cmake -S $GITHUB_WORKSPACE/metrix-simulator -B $GITHUB_WORKSPACE/metrix-simulator/build-ol8
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Clang Tidy PR
        id: clang-pr
        if: github.event_name == 'pull_request'
        run: |
          REPORT_NAME="clang_tidy_report_ol8.txt"
          REPORT_PATH="$PWD/${REPORT_NAME}"
          export MODIFIED_FILES=$(git diff --name-only --diff-filter=d origin/${{ github.base_ref }} origin/${{ github.head_ref }}  | grep -E ".*(metrix-simulator/src|metrix-simulator/log).*\.(cpp|hpp)$")
          if [ -n "$MODIFIED_FILES" ]; then
              clang-tidy $MODIFIED_FILES -p $GITHUB_WORKSPACE/metrix-simulator/build-ol8 > $REPORT_NAME || true
          fi
          echo "report_name=$REPORT_NAME" >> "$GITHUB_OUTPUT"
          echo "report_path=$REPORT_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload Clang Tidy report - PR
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # 4.3.3
        with:
          name: ${{ steps.clang-pr.outputs.report_name }}
          path: ${{ steps.clang-pr.outputs.report_path }}

  qa:
    name: Full QA C++ Oracle Linux 8
    runs-on: ubuntu-latest
    container: 'oraclelinux:8'
    steps:
      - name: Install Dependencies
        run: |
          yum update -y
          yum install cmake make gcc gcc-c++ which git wget zip
          dnf --enablerepo=ol8_codeready_builder install boost-static
          yum install -y python3 python3-pip

      - name: Install Java 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install gcovr
        run: |
          yum -y install libxml2-devel libxslt-devel 
          yum -y clean all
          pip3 install wheel
          pip3 install gcovr cpplint lxml==4.9.4

      - name: Install Sonar wrapper
        working-directory: /__w/powsybl-metrix
        run: |
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip build-wrapper-linux-x86.zip

      - name: Install Sonar scanner
        working-directory: /__w/powsybl-metrix
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          ln -s sonar-scanner-${SONAR_SCANNER_VERSION} sonar
          rm sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
        env:
          SONAR_SCANNER_VERSION: 5.0.1.3006

      - name: Checkout sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Configure 3rd parties
        run: |
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build/external

      - name: Build 3rd parties
        run: |
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build/external --parallel 2

      - name: Configure CMake
        run: >
          cmake -Wno-dev -S $GITHUB_WORKSPACE/metrix-simulator -B $GITHUB_WORKSPACE/metrix-simulator/build
          -DCMAKE_BUILD_TYPE=Debug
          -DCODE_COVERAGE=TRUE
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build/install

      - name: Build-Sonar
        run: >
          /__w/powsybl-metrix/build-wrapper-linux-x86/build-wrapper-linux-x86-64 
          --out-dir $GITHUB_WORKSPACE/metrix-simulator/build/output 
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --parallel 2 --target install

      - name: Tests
        run: cd $GITHUB_WORKSPACE/metrix-simulator/build && ctest -j8 --output-on-failure

      - name: Code coverage
        run: cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --target code-coverage

      - name: Sonarcloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd metrix-simulator
          /__w/powsybl-metrix/sonar/bin/sonar-scanner -Dsonar.host.url=https://sonarcloud.io

  release:
    name: Release Oracle Linux 8
    runs-on: ubuntu-latest
    container: 'oraclelinux:8'
    needs: qa
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Install Dependencies
        run: |
          yum update -y
          yum install cmake make gcc gcc-c++ which git wget zip
          dnf --enablerepo=ol8_codeready_builder install boost-static

      - name: Checkout sources
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Configure 3rd parties
        run: |
          cmake -S $GITHUB_WORKSPACE/metrix-simulator/external -B $GITHUB_WORKSPACE/metrix-simulator/build/external

      - name: Build 3rd parties
        run: |
          cmake --build $GITHUB_WORKSPACE/metrix-simulator/build/external --parallel 2

      - name: Configure CMake
        run: >
          cmake -Wno-dev -S $GITHUB_WORKSPACE/metrix-simulator -B $GITHUB_WORKSPACE/metrix-simulator/build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/metrix-simulator/build/install

      - name: Build
        run: cmake --build $GITHUB_WORKSPACE/metrix-simulator/build --target install --parallel 2

      - name: Prepare Metrix install
        id: metrix-install
        run: |
          ARCHIVE_NAME="metrix-simulator-ol8"
          ARCHIVE_PATH="$PWD/${ARCHIVE_NAME}"
          cd metrix-simulator/build/install/
          zip -r $ARCHIVE_PATH bin etc
          echo "archive_name=$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
          echo "archive_path=$ARCHIVE_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload OR-Tools install artifact
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # 4.3.3
        with:
          name: ${{ steps.metrix-install.outputs.archive_name }}.zip
          path: ${{ steps.metrix-install.outputs.archive_path }}.zip

      - name: Upload asset to release
        uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 # 2.0.4
        if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.metrix-install.outputs.archive_name }}.zip