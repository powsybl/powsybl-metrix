Subject: [PATCH] Remove search of BLAS in SuiteSparse_config
---
Index: SuiteSparse_config/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SuiteSparse_config/CMakeLists.txt b/SuiteSparse_config/CMakeLists.txt
--- a/SuiteSparse_config/CMakeLists.txt	(revision d9d7d244adc12d0a9bbe6795db6be844912e26a0)
+++ b/SuiteSparse_config/CMakeLists.txt	(date 1744114075501)
@@ -127,7 +127,7 @@
 # find the BLAS
 #-------------------------------------------------------------------------------
 
-include ( SuiteSparseBLAS )
+#include ( SuiteSparseBLAS )
 
 #-------------------------------------------------------------------------------
 # configure files
Index: SuiteSparse_config/SuiteSparse_config.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SuiteSparse_config/SuiteSparse_config.c b/SuiteSparse_config/SuiteSparse_config.c
--- a/SuiteSparse_config/SuiteSparse_config.c	(revision d9d7d244adc12d0a9bbe6795db6be844912e26a0)
+++ b/SuiteSparse_config/SuiteSparse_config.c	(date 1744114226929)
@@ -745,37 +745,7 @@
 
 const char *SuiteSparse_BLAS_library ( void )
 {
-    #if defined ( BLAS_Intel10_64ilp )
-        return ("Intel MKL 64ilp BLAS (64-bit integers)") ;
-    #elif defined ( BLAS_Intel10_64lp )
-        return ("Intel MKL 64lp BLAS (32-bit integers)") ;
-    #elif defined ( BLAS_Apple )
-        return ("Apple Accelerate Framework BLAS (32-bit integers)") ;
-    #elif defined ( BLAS_Arm_ilp64_mp )
-        return ("ARM MP BLAS (64-bit integers)") ;
-    #elif defined ( BLAS_Arm_mp )
-        return ("ARM MP BLAS (32-bit integers)") ;
-    #elif defined ( BLAS_IBMESSL_SMP )
-        return ((sizeof (SUITESPARSE_BLAS_INT) == 8) ?
-            "IBMESSL_SMP BLAS (64-bit integers)" :
-            "IBMESSL_SMP BLAS (32-bit integers)") ;
-    #elif defined ( BLAS_OpenBLAS )
-        return ((sizeof (SUITESPARSE_BLAS_INT) == 8) ?
-            "OpenBLAS (64-bit integers)" :
-            "OpenBLAS (32-bit integers)") ;
-    #elif defined ( BLAS_FLAME )
-        return ((sizeof (SUITESPARSE_BLAS_INT) == 8) ?
-            "FLAME (64-bit integers)" :
-            "FLAME (32-bit integers)") ;
-    #elif defined ( BLAS_Generic )
-        return ((sizeof (SUITESPARSE_BLAS_INT) == 8) ?
-            "Reference BLAS (64-bit integers)" :
-            "Reference BLAS (32-bit integers)") ;
-    #else
-        return ((sizeof (SUITESPARSE_BLAS_INT) == 8) ?
-            "Other BLAS (64-bit integers)" :
-            "Other BLAS (32-bit integers)") ;
-    #endif
+    return ("Not applicable") ;
 }
 
 //------------------------------------------------------------------------------
@@ -784,6 +754,6 @@
 
 size_t SuiteSparse_BLAS_integer_size ( void )
 {
-    return (sizeof (SUITESPARSE_BLAS_INT)) ;
+    return (sizeof (int64_t)) ;
 }
 
